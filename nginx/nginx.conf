events {
    worker_connections 1024;
}

http {
    # File upload size limit
    client_max_body_size 100M;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    gzip_disable "MSIE [1-6]\.";
    
    # Upstream definitions
    upstream open-webui {
        server open-webui:8080;
    }
    
    upstream mcp-server {
        server mcp-server:8888;
    }
    
    upstream filebrowser {
        server filebrowser:80;
    }
    
    upstream code-server {
        server code-server:8443;
    }

    server {
        listen 80;
        server_name aihub.instabids.ai 159.65.36.162;
        
        # Redirect to HTTPS if certificate exists
        # return 301 https://$server_name$request_uri;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Main Open WebUI interface
        location / {
            proxy_pass http://open-webui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # MCP Server endpoints
        location /mcp/ {
            proxy_pass http://mcp-server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # SSE endpoint for MCP (Server-Sent Events)
        location /sse {
            proxy_pass http://mcp-server/sse;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            
            # SSE specific headers
            add_header Content-Type text/event-stream;
            add_header Cache-Control no-cache;
            add_header X-Accel-Buffering no;
        }
        
        # FileBrowser for visual file management
        location /files {
            return 302 /files/;
        }
        
        location /files/ {
            proxy_pass http://filebrowser/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # VS Code Server (optional)
        location /code {
            return 302 /code/;
        }
        
        location /code/ {
            proxy_pass http://code-server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Accept-Encoding gzip;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Direct workspace access (read-only)
        location /workspace/ {
            alias /var/www/workspace/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            autoindex_format html;
            charset utf-8;
            
            # Add icons for file types
            add_before_body /autoindex/header.html;
            add_after_body /autoindex/footer.html;
        }
        
        # API documentation (if Swagger enabled)
        location /docs {
            proxy_pass http://open-webui/docs;
            proxy_set_header Host $host;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # HTTPS server (uncomment after SSL setup)
    # server {
    #     listen 443 ssl http2;
    #     server_name aihub.instabids.ai;
    #     
    #     ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    #     
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     # Copy all location blocks from above
    # }
}
